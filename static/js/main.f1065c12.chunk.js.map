{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Book","title","firstName","lastName","pages","isRead","this","App","props","sampleBooks","books","ls","get","state","formIsVisible","set","i","book","setState","splice","push","showEmptyMsg","length","className","toggleRead","handleToggleRead","deleteBook","handleDeleteBook","toggleShowForm","style","display","id","onClick","addBook","handleAddBook","React","Component","BookShelf","index","renderBookCard","BookCard","readStatus","class","ToggleReadBtn","DeleteBtn","ShowFormBtn","type","NewBookForm","handleTitleChange","bind","handleFirstNameChange","handleLastNameChange","handlePagesChange","handleReadChange","handleSubmit","e","target","value","for","name","onChange","checked","AddBookBtn","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f1065c12.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ls from 'local-storage'\n\nfunction Book (title, firstName, lastName, pages, isRead){\n  this.title = title;\n  this.firstName = firstName;\n  this.lastName = lastName;\n  this.pages = pages;\n  this.isRead = isRead;    \n}\n\nclass App extends React.Component{\n  constructor (props) {\n    super (props)\n    const sampleBooks = [\n      new Book('Shoe Dog', 'Phil', 'Knight', 386, true),\n      new Book('Flow', 'Mihaly', 'Csikszentmihalyi', 439, true),\n      new Book('Sapiens', 'Yuval', 'Harari', 443, false)\n    ]\n    const books = ls.get('books') || sampleBooks\n    this.state = {\n        books: books,\n        formIsVisible: false\n    }\n    ls.set('books', books)\n  }\n\n  handleToggleRead (i) {\n    const books = [...this.state.books]\n    const book = this.state.books[i]\n    book.isRead = !book.isRead\n    books[i] = book\n    this.setState({\n      books: books\n    })\n    ls.set('books', books)\n  }\n\n  handleDeleteBook (i) {\n    const books = [...this.state.books]\n    books.splice(i,1)\n    this.setState ({\n      books: books\n    })\n    ls.set('books', books)\n  }\n\n  handleAddBook (book) {\n    const books = [...this.state.books]\n    books.push(book)\n    this.setState ({\n      books: books,\n      formIsVisible: false\n    })\n    ls.set('books', books)\n  }\n\n  toggleShowForm () {\n    this.setState ({\n      formIsVisible: !this.state.formIsVisible\n    })\n  }\n\n  render () {\n    const showEmptyMsg = this.state.books.length === 0 \n    return (\n      <div className=\"App\">\n        <h1>My Books</h1>\n        <BookShelf \n          showEmptyMsg = {showEmptyMsg}\n          books = {this.state.books} \n          toggleRead = {\n            (i)=>this.handleToggleRead(i)\n          }\n          deleteBook = {\n            (i)=>this.handleDeleteBook(i)\n          }\n        />\n        <ShowFormBtn toggleShowForm = {()=>this.toggleShowForm()}/>\n          \n        <div style={{display: this.state.formIsVisible ? \"block\" : \"none\"}}>\n          <div id=\"darkenedBackground\" onClick = {()=>this.toggleShowForm()}></div>\n          <NewBookForm \n            addBook = {\n              (book)=>this.handleAddBook(book)\n            }\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nclass BookShelf extends React.Component {\n  renderBookCard (i) {\n    return (\n      <BookCard \n        book = {this.props.books[i]}\n        index = {i}\n        toggleRead = {this.props.toggleRead}\n        deleteBook = {this.props.deleteBook}\n      />\n    )\n  }\n\n  render() {\n    const books = []\n    for (let i = 0; i < this.props.books.length; i++){\n      books.push(\n        this.renderBookCard(i)\n      )\n    }\n    return (\n      <div>\n        <div id = \"emptyMsg\" style={{display: this.props.showEmptyMsg ? \"block\" : \"none\"}}>\n          You don't have any books stored\n        </div>\n\n        <div id=\"bookShelf\">\n          {books}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass BookCard extends React.Component {\n  render () {\n    const readStatus = this.props.book.isRead?'Read':'Not Read'\n    return (\n      <div class=\"bookCard\">\n        <h2>{this.props.book.title}</h2>\n        <p>by {this.props.book.firstName + ' ' + this.props.book.lastName + ', ' + this.props.book.pages + ' pages'}</p>\n        <p>{readStatus}</p>\n        <ToggleReadBtn \n          toggleRead = {() => this.props.toggleRead(this.props.index)}\n        />\n        <DeleteBtn\n          deleteBook = {() => this.props.deleteBook(this.props.index)}\n        />\n      </div>\n    )\n  }\n}\n\nclass ToggleReadBtn extends React.Component {\n  render () {\n    return (\n      <button id='read' onClick = {this.props.toggleRead}>\n        Toggle Read\n      </button>\n    )\n  }\n}\n\nclass DeleteBtn extends React.Component {\n  render () {\n    return (\n      <button class=\"delete\" onClick = {this.props.deleteBook}>\n        Delete\n      </button>\n    )\n  }\n}\n\nclass ShowFormBtn extends React.Component {\n  render () {\n    return (\n        <button type=\"button\" id=\"showForm\" onClick = {this.props.toggleShowForm}>\n          + Add a New Book\n        </button>\n    )\n  }\n}\n\nclass NewBookForm extends React.Component {\n  constructor (props) {\n    super (props) \n    this.state = {\n      title: '',\n      firstName: '',\n      lastName: '',\n      pages: '',\n      isRead: true\n    }\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this)\n    this.handleLastNameChange = this.handleLastNameChange.bind(this)\n    this.handlePagesChange = this.handlePagesChange.bind(this)\n    this.handleReadChange = this.handleReadChange.bind(this)\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleTitleChange (e) {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  handleFirstNameChange (e) {\n    this.setState({\n      firstName: e.target.value\n    })\n  }\n\n  handleLastNameChange (e) {\n    this.setState({\n      lastName: e.target.value\n    })\n  }\n\n  handlePagesChange (e) {\n    this.setState({\n      pages: e.target.value\n    })\n  }\n\n  handleReadChange (e) {\n    this.setState({\n      isRead: e.target.id==='yes'\n    })\n  }\n\n  handleSubmit () {\n    const book = new Book (this.state.title, this.state.firstName, this.state.lastName, this.state.pages, this.state.isRead)\n    this.props.addBook(book)\n    this.setState({\n      title: '',\n      firstName: '',\n      lastName: '',\n      pages: '',\n      isRead: true \n    })\n  }\n  \n  render () {\n    return (\n      <form>\n        <div class=\"title\">Add a book</div>\n        <p>\n          <label for=\"title\">Book Title</label> \n            \n          <input type=\"text\" name=\"title\" id=\"Title\" value={this.state.title} onChange={this.handleTitleChange} /> <br/>\n        </p>\n        <p>\n        <label for=\"firstName\">Author's First Name </label>\n        <input type=\"text\" name=\"firstName\" id=\"AuthorFirst\" value={this.state.firstName} onChange={this.handleFirstNameChange} /><br/>\n        </p>\n\n        <p>\n        <label for=\"lastName\">Author's Last Name </label>\n        <input type=\"text\" name=\"lastName\" id=\"AuthorLast\" value={this.state.lastName} onChange={this.handleLastNameChange}/><br/>\n        </p>\n\n        <p>\n        <label for=\"totalPages\">Total Pages: </label>\n        <input type=\"text\" name=\"totalPages\" id=\"PagesNumber\" value={this.state.pages} onChange={this.handlePagesChange}/><br/>\n        </p>\n\n        <div id=\"wrapper\">\n        <p>\n        <label for=\"yes_no_radio\">Have you read this book?</label>\n        <label> Yes</label>\n        <input type=\"radio\" name=\"yes_no\" id=\"yes\" checked={this.state.isRead} onChange={this.handleReadChange}/>\n        <label> No</label>\n        <input type=\"radio\" name=\"yes_no\" checked={!this.state.isRead} onChange={this.handleReadChange}/>\n        </p>\n        </div>\n\n        <AddBookBtn addBook = {() => this.handleSubmit()}/>\n      </form>\n    )\n  }\n}\n\nclass AddBookBtn extends React.Component {\n  render () {\n    return (\n        <button type=\"button\" id=\"addBook\" onClick = {this.props.addBook}>\n          Add\n        </button>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}